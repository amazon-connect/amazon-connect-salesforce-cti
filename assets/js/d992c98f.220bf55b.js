"use strict";(self.webpackChunkamazon_connect_salesforce_cti=self.webpackChunkamazon_connect_salesforce_cti||[]).push([[4149],{5680:(e,n,t)=>{t.d(n,{xA:()=>s,yg:()=>u});var a=t(6540);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,i=function(e,n){if(null==e)return{};var t,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var c=a.createContext({}),p=function(e){var n=a.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},s=function(e){var n=p(e.components);return a.createElement(c.Provider,{value:n},e.children)},g="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},d=a.forwardRef((function(e,n){var t=e.components,i=e.mdxType,r=e.originalType,c=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),g=p(t),d=i,u=g["".concat(c,".").concat(d)]||g[d]||m[d]||r;return t?a.createElement(u,o(o({ref:n},s),{},{components:t})):a.createElement(u,o({ref:n},s))}));function u(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var r=t.length,o=new Array(r);o[0]=d;var l={};for(var c in n)hasOwnProperty.call(n,c)&&(l[c]=n[c]);l.originalType=e,l[g]="string"==typeof e?e:i,o[1]=l;for(var p=2;p<r;p++)o[p]=t[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},5805:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>m,frontMatter:()=>r,metadata:()=>l,toc:()=>p});var a=t(8168),i=(t(6540),t(5680));const r={id:"01-cti-flow-sources-and-events",title:"Appendix C: CTI Flow Sources and Events"},o=void 0,l={unversionedId:"lightning/appendices/appendix-c-cti-flow-sources-and-events/01-cti-flow-sources-and-events",id:"lightning/appendices/appendix-c-cti-flow-sources-and-events/01-cti-flow-sources-and-events",title:"Appendix C: CTI Flow Sources and Events",description:"The following sources are defined in the adapter for use with CTI Flows:",source:"@site/docs/lightning/05-appendices/appendix-c-cti-flow-sources-and-events/01-cti-flow-sources-and-events.md",sourceDirName:"lightning/05-appendices/appendix-c-cti-flow-sources-and-events",slug:"/lightning/appendices/appendix-c-cti-flow-sources-and-events/01-cti-flow-sources-and-events",permalink:"/amazon-connect-salesforce-cti/docs/lightning/appendices/appendix-c-cti-flow-sources-and-events/01-cti-flow-sources-and-events",draft:!1,editUrl:"https://github.com/amazon-connect/amazon-connect-salesforce-cti/docs/lightning/05-appendices/appendix-c-cti-flow-sources-and-events/01-cti-flow-sources-and-events.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{id:"01-cti-flow-sources-and-events",title:"Appendix C: CTI Flow Sources and Events"},sidebar:"lightning",previous:{title:"Appendix B: Configuring Salesforce as Your Identity Provider",permalink:"/amazon-connect-salesforce-cti/docs/lightning/appendices/appendix-b-configuring-salesforce-as-your-identity-provider/01-configuration"},next:{title:"Appendix D: CTI Flow Examples",permalink:"/amazon-connect-salesforce-cti/docs/lightning/appendices/appendix-d-cti-flow-examples/01-cti-flow-examples"}},c={},p=[],s={toc:p},g="wrapper";function m(e){let{components:n,...t}=e;return(0,i.yg)(g,(0,a.A)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,i.yg)("p",null,"The following sources are defined in the adapter for use with CTI Flows:"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},"Initialization"),(0,i.yg)("ul",{parentName:"li"},(0,i.yg)("li",{parentName:"ul"},"onInit -- The CTI adapter has initialized."))),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},"Amazon Connect Agent"),(0,i.yg)("ul",{parentName:"li"},(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},"onRefresh -- The Connect agent's data was updated.")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},"onStateChange -- The Connect agent's state changed.")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},"onRoutable -- The Connect agent became available for contacts.")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},"onNotRoutable -- The Connect agent became unavailable for\ncontacts.")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},'onOffline -- The Connect agent\'s state was set to "Offline".')),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},"onError -- The Connect agent encountered a system error.")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},'onAfterCallWork -- The Connect agent entered "After Call Work".')),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},"onInit -- The Connect agent has logged in.")))),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},"Amazon Connect Voice Contact"),(0,i.yg)("ul",{parentName:"li"},(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},"onIncoming -- The voice contact is incoming. Note: This event\nfires for queued callback contact only.")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},"onConnecting -- The voice contact is connecting. Note. This\nevent fires for inbound and outbound contacts except queued\ncallback contacts.")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},"onConnected -- The voice contact is connected.")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},"onEnded -- The voice contact is ended or destroyed.")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},"onRefresh -- The voice contact is updated.")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},"onAccepted -- A voice contact is accepted.")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},"onPending -- The voice contact is pending.")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},"onMissed -- The voice contact is / was missed.")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},"onDestroy - The voice contact is destroyed.")))),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},"Amazon Connect Chat Contact"),(0,i.yg)("ul",{parentName:"li"},(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},"onConnecting -- The chat contact is connecting.")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},"onConnected -- The chat contact is connected.")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},"onEnded -- The chat contact ended.")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},"onRefresh -- The chat contact is updated.")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},"onAccepted -- The chat contact is accepted.")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},"onPending -- The voice contact is pending.")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},"onMessageReceived -- A message was received from the customer")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},"onMessageSent -- A message was sent to the customer")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},"onMissed -- The chat contact was missed.")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},"onDestroy - The voice contact is destroyed.")))),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},"Amazon Connect Task Contact"),(0,i.yg)("ul",{parentName:"li"},(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},"onIncoming -- The tasks contact is incoming.")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},"onConnecting -- The task contact is connecting.")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},"onConnected -- The task contact is connected.")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},"onEnded -- The task contact ended.")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},"onRefresh -- The task contact is updated.")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},"onAccepted -- The task contact is accepted.")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},"onPending -- The voice contact is pending.")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},"onMissed -- The task contact was missed.")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},"onDestroy - The voice contact is destroyed.")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},"onTransferInitiated -- When the server has initiated the task transfer.")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},"onTransferSucceeded -- When the task transfer has succeeded.")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},"onTransferFailed -- When the task transfer has failed.")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},"onTaskExpiring -- Triggers 2 hours before the task expires.")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},"onTaskExpired -- When the task has expired.")))),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},"Salesforce Agent"),(0,i.yg)("ul",{parentName:"li"},(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},"onStateChange -- The Salesforce agent's state changed.")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},"onWorkAccepted -- The Salesforce agent accepted work.")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},"onWorkloadChanged -- The Salesforce agent's workload changed.")))),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},"Salesforce UI"),(0,i.yg)("ul",{parentName:"li"},(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},"onClickToDial -- A phone number, within the Salesforce UI, was\nclicked.")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},"onNavigationChange")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("p",{parentName:"li"},"onHvsWorkStart"))))))}m.isMDXComponent=!0}}]);