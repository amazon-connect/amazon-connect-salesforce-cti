"use strict";(self.webpackChunkamazon_connect_salesforce_cti=self.webpackChunkamazon_connect_salesforce_cti||[]).push([[6775],{3905:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>g});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function s(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?s(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):s(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},s=Object.keys(e);for(n=0;n<s.length;n++)a=s[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)a=s[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var i=n.createContext({}),p=function(e){var t=n.useContext(i),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},c=function(e){var t=p(e.components);return n.createElement(i.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,s=e.originalType,i=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=p(a),g=r,f=u["".concat(i,".").concat(g)]||u[g]||m[g]||s;return a?n.createElement(f,o(o({ref:t},c),{},{components:a})):n.createElement(f,o({ref:t},c))}));function g(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var s=a.length,o=new Array(s);o[0]=u;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var p=2;p<s;p++)o[p]=a[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},3164:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var n=a(7462),r=(a(7294),a(3905)),s=a(4996);const o={id:"01-contact-flow-salesforce-lambdas",title:"Accessing the Salesforce API from Amazon Connect Contact Flows Using AWS Lambda"},l=void 0,i={unversionedId:"lightning/salesforce-lambdas/01-contact-flow-salesforce-lambdas",id:"lightning/salesforce-lambdas/01-contact-flow-salesforce-lambdas",title:"Accessing the Salesforce API from Amazon Connect Contact Flows Using AWS Lambda",description:"The most commonly used feature of the AWS Serverless Application",source:"@site/docs/lightning/04-salesforce-lambdas/01-contact-flow-salesforce-lambdas.md",sourceDirName:"lightning/04-salesforce-lambdas",slug:"/lightning/salesforce-lambdas/01-contact-flow-salesforce-lambdas",permalink:"/amazon-connect-salesforce-cti/docs/lightning/salesforce-lambdas/01-contact-flow-salesforce-lambdas",draft:!1,editUrl:"https://github.com/amazon-connect/amazon-connect-salesforce-cti/docs/lightning/04-salesforce-lambdas/01-contact-flow-salesforce-lambdas.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{id:"01-contact-flow-salesforce-lambdas",title:"Accessing the Salesforce API from Amazon Connect Contact Flows Using AWS Lambda"},sidebar:"lightning",previous:{title:"Global Resiliency",permalink:"/amazon-connect-salesforce-cti/docs/lightning/cti-adapter/16-global-resiliency"},next:{title:"Amazon Connect Historical Metrics in Salesforce",permalink:"/amazon-connect-salesforce-cti/docs/lightning/salesforce-lambdas/02-historical-metrics"}},p={},c=[{value:"Salesforce Lookup",id:"salesforce-lookup",level:3},{value:"Salesforce Create",id:"salesforce-create",level:3},{value:"Salesforce Update",id:"salesforce-update",level:3},{value:"Salesforce Phone Lookup",id:"salesforce-phone-lookup",level:3},{value:"Salesforce Delete",id:"salesforce-delete",level:3},{value:"Salesforce query",id:"salesforce-query",level:3},{value:"Salesforce queryOne",id:"salesforce-queryone",level:3},{value:"Salesforce createChatterPost",id:"salesforce-createchatterpost",level:3},{value:"Salesforce createChatterComment",id:"salesforce-createchattercomment",level:3},{value:"Salesforce search",id:"salesforce-search",level:3},{value:"Salesforce searchOne",id:"salesforce-searchone",level:3}],m={toc:c};function u(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"The most commonly used feature of the AWS Serverless Application\nRepository for Salesforce is accessing/updating Salesforce data using\nthe sfInvokeAPI Lambda function. This function allows an Amazon Connect\ncontact flow to perform the following operations against your Salesforce\norg:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Lookup:")," queries Salesforce for objects based on the parameters\npassed to it")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Create:")," creates a Salesforce object based on the parameters\npassed to it")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Update:")," updates a Salesforce object based on the parameters\npassed to it")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Phone Lookup:")," uses Salesforce Object Search Language (SOSL) to\nconstruct text-based search queries against the search index, which\ngives significant performance improvement when searching phone\nnumber fields.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Delete:")," deletes a Salesforce object based on the parameters\npassed to it")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Query:")," executes a Salesforce Object Query Language (SOQL) query\non the Salesforce instance. Can return multiple entries.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"QueryOne:")," executes a Salesforce Object Query Language (SOQL)\nquery on the Salesforce instance. Returns result only when one entry\nis returned from the query.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"CreateChatterPost:")," creates a chatter post.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"CreateChatterComment:")," creates a chatter comment.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Search:")," performs a search against the Salesforce instance, returning all results.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"SearchOne:")," performs a search against the Salesforce instance, returning at most one result."))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"NOTE:")," naming of the Lambda function will vary based on template\ndata, but sfInvokeAPI will always be a part of the name."),(0,r.kt)("p",null,"When you invoke this Lambda function from your contact flows, you will\nneed to pass along parameters that inform the function as to which\nSalesforce operation you wish to execute, as well as pass along any\nrequired parameters. Depedning on your use case, this can require\nreference to the ",(0,r.kt)("a",{parentName:"p",href:"https://developer.salesforce.com/docs/atlas.en-us.api_rest.meta/api_rest/resources_list.htm"},"Salesforce REST\nAPI"),"\nor the ",(0,r.kt)("a",{parentName:"p",href:"https://developer.salesforce.com/docs/atlas.en-us.chatterapi.meta/chatterapi/intro_what_is_chatter_connect.htm"},"Salesforce Connect REST\nAPI"),"\ndocumentation. The core parameters are:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"sf_operation:")," specifies with operation to run. Options are\nlookup, create, update, phoneLookup, query, queryOne,\ncreateChatterPost, createChatterComment")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"sf_object:")," defines what type of object you are referencing.\nExamples include Case, Contact, Task, etc.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"sf_fields:")," the fields you want to receive back from Salesforce\nwhen an operation completes successfully")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"sf_id:")," the unique identifier for a Salesforce object. Typically\nused in update operations")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"sf_phone:")," contains the phone number used to search when\nperforming a phone lookup"))),(0,r.kt)("h3",{id:"salesforce-lookup"},"Salesforce Lookup"),(0,r.kt)("p",null,"This operation is invoked by setting ",(0,r.kt)("strong",{parentName:"p"},"sf_operation")," to ",(0,r.kt)("strong",{parentName:"p"},"lookup"),". In\nthis case, the Lambda function queries Salesforce for objects based on\nthe parameters passed to it. For lookup, the following parameters are\nrequired:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"sf_object")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"sf_fields"))),(0,r.kt)("p",null,"Any additional parameters passed will be evaluated as conditional\narguments for the lookup."),(0,r.kt)("p",null,"Note that this operation only returns the first item of the query\nresults. If you want to have all results returned from Salesforce, set\n",(0,r.kt)("strong",{parentName:"p"},"sf_operation")," to ",(0,r.kt)("strong",{parentName:"p"},"lookup_all"),"."),(0,r.kt)("p",null,"In the contact flow example below, we are looking for a specific case\nbased on customer input."),(0,r.kt)("img",{src:(0,s.Z)("/img/lightning/image156.png")}),(0,r.kt)("p",null,"This operation returns a response of:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "Id": "5006g00000AaIs7AAF",\n    "sf_count": 1\n}\n')),(0,r.kt)("p",null,"For ",(0,r.kt)("strong",{parentName:"p"},"lookup_all")," the operation returns a response of:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "sf_records_0_Id": "5006g00000AaIs7AAF",\n    "sf_records_1_Id": "5006g00000AaIs7AAE",\n    "sf_count": 2\n}\n')),(0,r.kt)("p",null,"Note that ",(0,r.kt)("inlineCode",{parentName:"p"},"sf_count")," is the count of records matched and not the count of fields in the response. This means all fields that start with ",(0,r.kt)("inlineCode",{parentName:"p"},"sf_records_i_")," count as one record. If the query above returned the Name as well as the Id the response will be:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "sf_records_0_Id": "5006g00000AaIs7AAF",\n    "sf_records_0_Name": "Name0",\n    "sf_records_1_Id": "5006g00000AaIs7AAE",\n    "sf_records_1_Name": "Name1",\n    "sf_count": 2\n}\n')),(0,r.kt)("h3",{id:"salesforce-create"},"Salesforce Create"),(0,r.kt)("p",null,"This operation is invoked by setting ",(0,r.kt)("strong",{parentName:"p"},"sf_operation")," to ",(0,r.kt)("strong",{parentName:"p"},"create"),". In\nthis case, the Lambda function creates a Salesforce object based on the\nparameters passed to it. For create, the following parameters are\nrequired:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"sf_object")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Specify additional parameters for the Salesforce object to be\ncreated. Please be sure to include all parameters required to create\nthe Salesforce object."))),(0,r.kt)("p",null,"In the contact flow example below, we creating a new case based on\ncustomer input."),(0,r.kt)("img",{src:(0,s.Z)("/img/lightning/image157.png")}),(0,r.kt)("p",null,"This operation returns a response of:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "Id": "5006g00000BLqurAAD"\n}\n')),(0,r.kt)("h3",{id:"salesforce-update"},"Salesforce Update"),(0,r.kt)("p",null,"This operation is invoked by setting ",(0,r.kt)("strong",{parentName:"p"},"sf_operation")," to ",(0,r.kt)("strong",{parentName:"p"},"update"),". In\nthis case, the Lambda function updates a Salesforce object based on the\nparameters passed to it. For update, the following parameters are\nrequired:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"sf_object")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"sf_id")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Specify additional parameters for the Salesforce object to be\ncreated. Please be sure to include all parameters required to create\nthe Salesforce object."))),(0,r.kt)("p",null,"In the contact flow example below, we are updating a specific case."),(0,r.kt)("img",{src:(0,s.Z)("/img/lightning/image158.png")}),(0,r.kt)("p",null,"This operation returns a response of:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "Status": "204"\n}\n')),(0,r.kt)("p",null,'The "204" status indicates a success.'),(0,r.kt)("h3",{id:"salesforce-phone-lookup"},"Salesforce Phone Lookup"),(0,r.kt)("p",null,"This operation is invoked by setting ",(0,r.kt)("strong",{parentName:"p"},"sf_operation")," to\n",(0,r.kt)("strong",{parentName:"p"},"phoneLookup"),". In this case, the Lambda function uses Salesforce\nObject Search Language (SOSL) to construct text-based search queries.\nFor phoneLookup, the following parameters are required:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"sf_phone")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"sf_fields"))),(0,r.kt)("p",null,"In the contact flow example below, we look for a customer by phone\nnumber."),(0,r.kt)("img",{src:(0,s.Z)("/img/lightning/image159.png")}),(0,r.kt)("p",null,"This operation returns a response of:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "Id": "5006g00000BLqurAAD",\n    "sf_count": "1",\n    "Name": "Jim Smith"\n}\n')),(0,r.kt)("h3",{id:"salesforce-delete"},"Salesforce Delete"),(0,r.kt)("p",null,"This operation is invoked by setting ",(0,r.kt)("strong",{parentName:"p"},"sf_operation")," to ",(0,r.kt)("strong",{parentName:"p"},"delete"),". In\nthis case, the Lambda function deletes a Salesforce object based on the\nparameters passed to it. For delete, the following parameters are\nrequired:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"sf_object")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"sf_id"))),(0,r.kt)("p",null,"In the contact flow example below, we deleting an existing case based on\ncustomer input."),(0,r.kt)("img",{src:(0,s.Z)("/img/lightning/image160.png")}),(0,r.kt)("img",{src:(0,s.Z)("/img/lightning/image161.png")}),(0,r.kt)("p",null,"This operation returns a response of:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "Response": "None"\n}\n')),(0,r.kt)("h3",{id:"salesforce-query"},"Salesforce query"),(0,r.kt)("p",null,"This operation is invoked by setting ",(0,r.kt)("strong",{parentName:"p"},"sf_operation")," to ",(0,r.kt)("strong",{parentName:"p"},"query"),". In\nthis case, the Lambda function uses Salesforce Object Query Language\n(SOQL) to conduct a query against the Salesforce instance. For query,\nthe following parameter is required:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"query")),(0,r.kt)("p",null,"Any additional parameters will replace text values in the original query\nso that queries can be dynamic based on values stored within the contact\nflow. For example, the parameter set:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},'query: "select field from object"')),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},'field: "Id"')),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},'object: "Task"'))),(0,r.kt)("p",null,'Will result in the query: "select Id from Task".'),(0,r.kt)("p",null,"In the contact flow example below, we look for a customer by phone\nnumber."),(0,r.kt)("img",{src:(0,s.Z)("/img/lightning/image162.png")}),(0,r.kt)("img",{src:(0,s.Z)("/img/lightning/image163.png")}),(0,r.kt)("p",null,"(full text of the value is \"select Id from Contact where Phone LIKE\n'%number%'\")"),(0,r.kt)("img",{src:(0,s.Z)("/img/lightning/image164.png")}),(0,r.kt)("p",null,"This operation returns a response of:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "sf_records_0_Id": "00303000001RZfIAAW",\n    "sf_count": 1\n}\n')),(0,r.kt)("p",null,"Note that ",(0,r.kt)("inlineCode",{parentName:"p"},"sf_count")," is the count of records matched and not the count of fields in the response. This means all fields that start with ",(0,r.kt)("inlineCode",{parentName:"p"},"sf_records_i_")," count as one record. If the query above returned the Name as well as the Id and matched more than one record, the response will be:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "sf_records_0_Id": "00303000001RZfIAAW",\n    "sf_records_0_Name": "Name0",\n    "sf_records_1_Id": "00303000001RZfIAAE",\n    "sf_records_1_Name": "Name1",\n    "sf_count": 2\n}\n')),(0,r.kt)("h3",{id:"salesforce-queryone"},"Salesforce queryOne"),(0,r.kt)("p",null,"This operation is invoked by setting ",(0,r.kt)("strong",{parentName:"p"},"sf_operation")," to ",(0,r.kt)("strong",{parentName:"p"},"queryOne"),"\n(case sensitive). In this case, the Lambda function uses Salesforce\nObject Query Language (SOQL) to conduct a query against the Salesforce\ninstance, returning a result only when one record is returned from the\nquery. For query, the following parameter is required:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"query")),(0,r.kt)("p",null,"Any additional parameters will replace text values in the original query\nso that queries can be dynamic based on values stored within the contact\nflow. For example, the parameter set:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},'query: "select field from object"')),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},'field: "Id"')),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},'object: "Task"'))),(0,r.kt)("p",null,'Will result in the query: "select Id from Task".'),(0,r.kt)("p",null,"In the contact flow example below, we look for a customer by phone\nnumber."),(0,r.kt)("img",{src:(0,s.Z)("/img/lightning/image165.png")}),(0,r.kt)("img",{src:(0,s.Z)("/img/lightning/image163.png")}),(0,r.kt)("p",null,"(full text of the value is \"select Id from Contact where Phone LIKE\n'%number%'\")"),(0,r.kt)("img",{src:(0,s.Z)("/img/lightning/image164.png")}),(0,r.kt)("p",null,"This operation returns a response of:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "Id": "00303000001RZfIAAW",\n    "sf_count": 1\n}\n')),(0,r.kt)("h3",{id:"salesforce-createchatterpost"},"Salesforce createChatterPost"),(0,r.kt)("p",null,"This operation is invoked by setting ",(0,r.kt)("strong",{parentName:"p"},"sf_operation")," to\n",(0,r.kt)("strong",{parentName:"p"},"createChatterPost")," (case sensitive). In this case, the Lambda\nfunction uses the Salesforce Connect REST API to create a chatter post\n(see\n",(0,r.kt)("a",{parentName:"p",href:"https://developer.salesforce.com/docs/atlas.en-us.chatterapi.meta/chatterapi/quickreference_post_feed_item.htm"},"here"),").\nFor createChatterPost, the following parameters are required:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"sf_feedElementType")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"sf_subjectId")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"sf_messageType")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"sf_message"))),(0,r.kt)("p",null,"The following parameter is optional:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"sf_mention")),(0,r.kt)("p",null,"(refer to the api reference for value types)"),(0,r.kt)("p",null,"Any additional parameters will replace text values in the sf_message so\nthat messages can be dynamic based on values stored within the contact\nflow. For example, the parameter set:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},'sf_message: "Please help me with case ',(0,r.kt)("inlineCode",{parentName:"p"},"caseId"),'"')),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"caseId: 1234"))),(0,r.kt)("p",null,'Will result in the message: "Please help me with case 1234".'),(0,r.kt)("p",null,"In the contact flow example below, we leave a chatter post on a contact."),(0,r.kt)("img",{src:(0,s.Z)("/img/lightning/image166.png")}),(0,r.kt)("img",{src:(0,s.Z)("/img/lightning/image167.png")}),(0,r.kt)("img",{src:(0,s.Z)("/img/lightning/image168.png")}),(0,r.kt)("img",{src:(0,s.Z)("/img/lightning/image169.png")}),(0,r.kt)("img",{src:(0,s.Z)("/img/lightning/image170.png")}),(0,r.kt)("p",null,'(full text of the value is "I had a problem during the call. My contact\nid is ',(0,r.kt)("inlineCode",{parentName:"p"},"contactId"),'.")'),(0,r.kt)("img",{src:(0,s.Z)("/img/lightning/image171.png")}),(0,r.kt)("p",null,"The operation returns a response of:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "Id": "0D503000000ILY5CAO"\n}\n')),(0,r.kt)("p",null,"See the chatter post appear attached to the Subject:"),(0,r.kt)("img",{src:(0,s.Z)("/img/lightning/image172.png")}),(0,r.kt)("h3",{id:"salesforce-createchattercomment"},"Salesforce createChatterComment"),(0,r.kt)("p",null,"This operation is invoked by setting ",(0,r.kt)("strong",{parentName:"p"},"sf_operation")," to\n",(0,r.kt)("strong",{parentName:"p"},"createChatterComment")," (case sensitive). In this case, the Lambda\nfunction uses the Salesforce Connect REST to create a chatter comment\n(see\n",(0,r.kt)("a",{parentName:"p",href:"https://developer.salesforce.com/docs/atlas.en-us.chatterapi.meta/chatterapi/connect_resources_feed_element_capability_comments_items.htm"},"here"),").\nFor createChatterComment, the following parameters are required:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"sf_feedElementId")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"sf_commentType")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"sf_commentMessage"))),(0,r.kt)("p",null,"(refer to the api reference for value types)"),(0,r.kt)("p",null,"Any additional parameters will replace text values in the\nsf_commentMessage so that messages can be dynamic based on values stored\nwithin the contact flow. For example, the parameter set:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},'sf_commentMessage: "Please help me with case ',(0,r.kt)("inlineCode",{parentName:"p"},"caseId"),'"')),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"caseId: 1234"))),(0,r.kt)("p",null,"In the contact flow example below, we leave a comment on a chatter post."),(0,r.kt)("img",{src:(0,s.Z)("/img/lightning/image173.png")}),(0,r.kt)("img",{src:(0,s.Z)("/img/lightning/image174.png")}),(0,r.kt)("img",{src:(0,s.Z)("/img/lightning/image175.png")}),(0,r.kt)("img",{src:(0,s.Z)("/img/lightning/image176.png")}),(0,r.kt)("p",null,"The operation returns a response of:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "Id": "0D703000000ChhNCAS"\n}\n')),(0,r.kt)("p",null,"See the chatter post appear attached to the Subject:"),(0,r.kt)("img",{src:(0,s.Z)("/img/lightning/image177.png")}),(0,r.kt)("h3",{id:"salesforce-search"},"Salesforce search"),(0,r.kt)("p",null,"This operation is invoked by setting ",(0,r.kt)("strong",{parentName:"p"},"sf_operation")," to\n",(0,r.kt)("strong",{parentName:"p"},"search")," (case sensitive). In this case, the Lambda\nfunction uses the Salesforce REST to perform a parameterized search\n(see\n",(0,r.kt)("a",{parentName:"p",href:"https://developer.salesforce.com/docs/atlas.en-us.api_rest.meta/api_rest/resources_search_parameterized.htm"},"here"),").\nFor search, the following parameters are required:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"q")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"sf_fields")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"sf_object"))),(0,r.kt)("p",null,"The following parameters are optional:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"where")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"overallLimit"))),(0,r.kt)("p",null,"(refer to the api reference for value types)"),(0,r.kt)("p",null,"See the below example:"),(0,r.kt)("img",{src:(0,s.Z)("/img/lightning/image258.png")}),(0,r.kt)("img",{src:(0,s.Z)("/img/lightning/image259.png")}),(0,r.kt)("img",{src:(0,s.Z)("/img/lightning/image260.png")}),(0,r.kt)("img",{src:(0,s.Z)("/img/lightning/image261.png")}),(0,r.kt)("img",{src:(0,s.Z)("/img/lightning/image262.png")}),(0,r.kt)("img",{src:(0,s.Z)("/img/lightning/image263.png")}),(0,r.kt)("p",null,"The operation returns a response of:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "sf_records_0_Id": "50001000001B9e6AAG",\n    "sf_records_0_Subject": "test subject",\n    "sf_records_0_Status": "New",\n    "sf_records_1_Id": "50001000001B9eWAAS",\n    "sf_records_1_Subject": "test subject",\n    "sf_records_1_Status": "New",\n    "sf_records_2_Id": "50001000001BDgiAAG",\n    "sf_records_2_Subject": "test subject",\n    "sf_records_2_Status": "New",\n    "sf_count": 3\n}\n')),(0,r.kt)("p",null,"Note that ",(0,r.kt)("inlineCode",{parentName:"p"},"sf_count")," is the count of records matched and not the count of fields in the response. This means all fields that start with ",(0,r.kt)("inlineCode",{parentName:"p"},"sf_records_i_")," count as one record."),(0,r.kt)("h3",{id:"salesforce-searchone"},"Salesforce searchOne"),(0,r.kt)("p",null,"This operation is invoked by setting ",(0,r.kt)("strong",{parentName:"p"},"sf_operation")," to\n",(0,r.kt)("strong",{parentName:"p"},"searchOne")," (case sensitive). In this case, the Lambda\nfunction uses the Salesforce REST to perform a parameterized search\n(see\n",(0,r.kt)("a",{parentName:"p",href:"https://developer.salesforce.com/docs/atlas.en-us.api_rest.meta/api_rest/resources_search_parameterized.htm"},"here"),").\nFor search, the following parameters are required:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"q")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"sf_fields")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"sf_object"))),(0,r.kt)("p",null,"The following parameter is optional:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"where")),(0,r.kt)("p",null,"(refer to the api reference for value types)"),(0,r.kt)("p",null,"See the below example:"),(0,r.kt)("img",{src:(0,s.Z)("/img/lightning/image264.png")}),(0,r.kt)("img",{src:(0,s.Z)("/img/lightning/image265.png")}),(0,r.kt)("img",{src:(0,s.Z)("/img/lightning/image260.png")}),(0,r.kt)("img",{src:(0,s.Z)("/img/lightning/image261.png")}),(0,r.kt)("img",{src:(0,s.Z)("/img/lightning/image262.png")}),(0,r.kt)("img",{src:(0,s.Z)("/img/lightning/image263.png")}),(0,r.kt)("p",null,"The operation returns a response of:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "Id": "50001000001BIn6AAG",\n    "Subject": "test subject unique", \n    "Status": "New", \n    "sf_count": 1\n}\n')))}u.isMDXComponent=!0}}]);