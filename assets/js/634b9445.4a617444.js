"use strict";(self.webpackChunkamazon_connect_salesforce_cti=self.webpackChunkamazon_connect_salesforce_cti||[]).push([[1298],{2969:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>m,frontMatter:()=>i,metadata:()=>c,toc:()=>p});var t=a(8168),r=(a(6540),a(5680));const i={id:"01-cti-flow-sources-and-events",title:"Appendix A: CTI Flow Sources and Events"},o=void 0,c={unversionedId:"classic/appendices/appendix-a-cti-flow-sources-and-events/01-cti-flow-sources-and-events",id:"classic/appendices/appendix-a-cti-flow-sources-and-events/01-cti-flow-sources-and-events",title:"Appendix A: CTI Flow Sources and Events",description:"The following sources are defined in the adapter for use with CTI",source:"@site/docs/classic/05-appendices/01-appendix-a-cti-flow-sources-and-events/01-cti-flow-sources-and-events.md",sourceDirName:"classic/05-appendices/01-appendix-a-cti-flow-sources-and-events",slug:"/classic/appendices/appendix-a-cti-flow-sources-and-events/01-cti-flow-sources-and-events",permalink:"/amazon-connect-salesforce-cti/docs/classic/appendices/appendix-a-cti-flow-sources-and-events/01-cti-flow-sources-and-events",draft:!1,editUrl:"https://github.com/amazon-connect/amazon-connect-salesforce-cti/docs/classic/05-appendices/01-appendix-a-cti-flow-sources-and-events/01-cti-flow-sources-and-events.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{id:"01-cti-flow-sources-and-events",title:"Appendix A: CTI Flow Sources and Events"},sidebar:"classic",previous:{title:"Invoking the Amazon Connect Salesforce Lambda in a Contact Flow",permalink:"/amazon-connect-salesforce-cti/docs/classic/salesforce-lambdas/01-contact-flow-salesforce-lambdas"},next:{title:"Appendix B: Configuring Salesforce as Your Identity Provider",permalink:"/amazon-connect-salesforce-cti/docs/classic/appendices/appendix-b-configuring-salesforce-as-your-identity-provider/01-configuring-salesforce-as-your-identity-provider"}},l={},p=[],s={toc:p},g="wrapper";function m(e){let{components:n,...a}=e;return(0,r.yg)(g,(0,t.A)({},s,a,{components:n,mdxType:"MDXLayout"}),(0,r.yg)("p",null,"The following sources are defined in the adapter for use with CTI\nScripts:"),(0,r.yg)("ul",null,(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},"Initialization"),(0,r.yg)("ul",{parentName:"li"},(0,r.yg)("li",{parentName:"ul"},"onInit -- The CTI adapter has initialized."))),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},"Amazon Connect Agent"),(0,r.yg)("ul",{parentName:"li"},(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},"onRefresh -- The Connect agent's data was updated.")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},"onStateChange -- The Connect agent's state changed.")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},"onRoutable -- The Connect agent became available for contacts.")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},"onNotRoutable -- The Connect agent became unavailable for\ncontacts.")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},'onOffline -- The Connect agent\'s state was set to "Offline".')),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},"onError -- The Connect agent encountered a system error.")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},'onAfterCallWork -- The Connect agent entered "After Call Work".')),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},"onInit -- The Connect agent has logged in.")))),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},"Amazon Connect Voice Contact"),(0,r.yg)("ul",{parentName:"li"},(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},"onIncoming -- The voice contact is incoming. Note: This event\nfires for queued callback contact only.")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},"onConnecting -- The voice contact is connecting. Note. This\nevent fires for inbound and outbound contacts except queued\ncallback contacts.")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},"onConnected -- The voice contact is connected.")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},"onEnded -- The voice contact is ended or destroyed.")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},"onRefresh -- The voice contact is updated.")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},"onAccepted -- A voice contact is accepted.")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},"onPending -- The voice contact is pending.")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},"onMissed -- The voice contact is / was missed.")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},"onDestroy - The voice contact is destroyed.")))),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},"Amazon Connect Chat Contact"),(0,r.yg)("ul",{parentName:"li"},(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},"onConnecting -- The chat contact is connecting.")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},"onConnected -- The chat contact is connected.")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},"onEnded -- The chat contact ended.")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},"onRefresh -- The chat contact is updated.")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},"onAccepted -- The chat contact is accepted.")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},"onPending -- The chat contact is pending.")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},"onMessageReceived -- A message was received from the customer")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},"onMessageSent -- A message was sent to the customer")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},"onMissed -- The chat contact was missed.")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},"onDestroy - The voice contact is destroyed.")))),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},"Amazon Connect Task Contact"),(0,r.yg)("ul",{parentName:"li"},(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},"onIncoming -- The tasks contact is incoming.")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},"onConnecting -- The task contact is connecting.")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},"onConnected -- The task contact is connected.")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},"onEnded -- The task contact ended.")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},"onRefresh -- The task contact is updated.")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},"onAccepted -- The task contact is accepted.")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},"onPending -- The voice contact is pending.")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},"onMissed -- The task contact was missed.")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},"onDestroy - The voice contact is destroyed.")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},"onTransferInitiated -- When the server has initiated the task transfer.")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},"onTransferSucceeded -- When the task transfer has succeeded.")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},"onTransferFailed -- When the task transfer has failed.")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},"onTaskExpiring -- Triggers 2 hours before the task expires.")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},"onTaskExpired -- When the task has expired.")))),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},"Salesforce Agent"),(0,r.yg)("ul",{parentName:"li"},(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},"onStateChange -- The Salesforce agent's state changed.")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},"onWorkAccepted -- The Salesforce agent accepted work.")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},"onWorkloadChanged -- The Salesforce agent's workload changed.")))),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},"Salesforce UI"),(0,r.yg)("ul",{parentName:"li"},(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},"onClickToDial -- A phone number, within the Salesforce UI, was\nclicked.")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},"onNavigationChange")),(0,r.yg)("li",{parentName:"ul"},(0,r.yg)("p",{parentName:"li"},"onHvsWorkStart"))))))}m.isMDXComponent=!0},5680:(e,n,a)=>{a.d(n,{xA:()=>s,yg:()=>u});var t=a(6540);function r(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function i(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,t)}return a}function o(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?i(Object(a),!0).forEach((function(n){r(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function c(e,n){if(null==e)return{};var a,t,r=function(e,n){if(null==e)return{};var a,t,r={},i=Object.keys(e);for(t=0;t<i.length;t++)a=i[t],n.indexOf(a)>=0||(r[a]=e[a]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)a=i[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var l=t.createContext({}),p=function(e){var n=t.useContext(l),a=n;return e&&(a="function"==typeof e?e(n):o(o({},n),e)),a},s=function(e){var n=p(e.components);return t.createElement(l.Provider,{value:n},e.children)},g="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},d=t.forwardRef((function(e,n){var a=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),g=p(a),d=r,u=g["".concat(l,".").concat(d)]||g[d]||m[d]||i;return a?t.createElement(u,o(o({ref:n},s),{},{components:a})):t.createElement(u,o({ref:n},s))}));function u(e,n){var a=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=a.length,o=new Array(i);o[0]=d;var c={};for(var l in n)hasOwnProperty.call(n,l)&&(c[l]=n[l]);c.originalType=e,c[g]="string"==typeof e?e:r,o[1]=c;for(var p=2;p<i;p++)o[p]=a[p];return t.createElement.apply(null,o)}return t.createElement.apply(null,a)}d.displayName="MDXCreateElement"}}]);